{
    "collab_server" : "",
    "contents" : "# Author: Benjamin Reddy\n# Taken from pages 49-50 of O'Neil and Schutt\n\n#require(gdata)\n#require(plyr) #Added by Monnie McGee\n#install the gdata and plyr packages and load in to R.\nlibrary(plyr)\nlibrary(gdata)\ngetwd()\nsetwd(\"C:/Users/Scott's/Documents/DoingDataScience/Homework5/data\")\n\n## You need a perl interpreter to do this on Windows.\n## It's automatic in Mac\n#bk <- read.xls(\"rollingsales_brooklyn.xls\",pattern=\"BOROUGH\")\n\n# So, save the file as a csv and use read.csv instead\nbk <- read.csv(\"rollingsales_brooklyn.csv\",skip=4,header=TRUE)\n\n## Check the data\nhead(bk)\nsummary(bk)\nstr(bk) # Very handy function!\n\n## clean/format the data with regular expressions\n## More on these later. For now, know that the\n## pattern \"[^[:digit:]]\" refers to members of the variable name that\n## start with digits. We use the gsub command to replace them with a blank space.\n# We create a new variable that is a \"clean' version of sale.price.\n# And sale.price.n is numeric, not a factor.\nbk$SALE.PRICE.N <- as.numeric(gsub(\"[^[:digit:]]\",\"\", bk$SALE.PRICE))\ncount(is.na(bk$SALE.PRICE.N))\n\nnames(bk) <- tolower(names(bk)) # make all variable names lower case\n\n## TODO: Get rid of leading digits bk$gross.square.feet as above bk$SALE.PRICE\nbk$gross.sqft <- as.numeric(gsub(\"[^[:digit:]]\",\"\",bk$gross.square.feet))\ncount(is.na(bk$gross.square.feet))\n\n# TODO: Get rid of leading digits of as above bk$SALE.PRICE\nbk$land.sqft <- as.numeric(gsub(\"[^[:digit:]]\",\"\",bk$land.square.feet))\ncount(is.na(bk$land.square.feet))\n  \nbk$year.built <- as.numeric(as.character(bk$year.built))\n\n## do a bit of exploration to make sure there's not anything\n## weird going on with sale prices\nattach(bk)\nhist(sale.price.n) \ndetach(bk)\n\n## keep only the actual sales\nbk.sale <- bk[bk$sale.price.n!=0,]\nplot(bk.sale$gross.sqft,bk.sale$sale.price.n)\nplot(log10(bk.sale$gross.sqft),log10(bk.sale$sale.price.n))\n\n## for now, let's look at 1-, 2-, and 3-family homes\nbk.homes <- bk.sale[which(grepl(\"FAMILY\",bk.sale$building.class.category)),]\ndim(bk.homes)\n\n\n# TODO: complete plot() with log10 of bk.homes$gross.sqft,bk.homes$sale.price.n\n#   as above \"bk.sale\"\nplot(log10(bk.homes$gross.sqft),log10(bk.homes$sale.price.n))\nsummary(bk.homes[which(bk.homes$sale.price.n<100000),])\n\n\n## remove outliers that seem like they weren't actual sales\nbk.homes$outliers <- (log10(bk.homes$sale.price.n) <=5) + 0\n\n# TODO: find out homes that meets bk.homes$outliers==0\nbk.homes <- bk.homes[which(bk.homes$outliers==0),]\n\nplot(log10(bk.homes$gross.sqft),log10(bk.homes$sale.price.n))\n",
    "created" : 1486433027509.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "111548506",
    "id" : "FAEF02CF",
    "lastKnownWriteTime" : 1486434289,
    "last_content_update" : 1486434289226,
    "path" : "~/DoingDataScience/Homework5/source/R _rollingsales_brooklyn.R",
    "project_path" : "source/R _rollingsales_brooklyn.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}